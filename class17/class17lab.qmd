---
title: "Class 17 Lab"
author: "Snehita Vallumchetla"
format: pdf
---

## Downstream Analysis

In order to analyze the kallisto results, I downloaded the `tximport` and `rhdf5` Bioconductor packages. 

```{r}
library(tximport)

# setup the folder and filenames to read
folders <- dir(pattern="SRR21568*")
samples <- sub("_quant", "", folders)
files <- file.path( folders, "abundance.h5" )
names(files) <- samples

txi.kallisto <- tximport(files, type = "kallisto", txOut = TRUE)
```

Take a look at the top counts of our kallisto results. 

```{r}
head(txi.kallisto$counts)
```

By summing the columns, we are able to see how many transcripts we have for each sample


```{r}
colSums(txi.kallisto$counts)
```

We can also determine how many transcripts are accounted for in at least one sample

```{r}
sum(rowSums(txi.kallisto$counts) > 0)
```

Let us also filter out the samples that have no reads to set us up for future analysis.

```{r}
to.keep <- rowSums(txi.kallisto$counts) > 0
kset.nonzero <- txi.kallisto$counts[to.keep,]
```

also removed the samples that showed no change over time. 

```{r}
keep2 <- apply(kset.nonzero,1,sd) > 0
x <- kset.nonzero[keep2,]
```


##Principle Component Analysis

We can now set up a PCA of our counts matrix: centering and scaling each transcriptâ€™s measured levels so that each feature contributes equally to the PCA

Setting up the pca object:

```{r}
pca <- prcomp(t(x), scale = TRUE)
```

Observing summary statistics:

```{r}
summary(pca)
```
We can make a plot in R of PC1 vs PC2

```{r}
plot(pca$x[,1], pca$x[,2],
     col=c("blue","blue","red","red"),
     xlab="PC1", ylab="PC2", pch=16)
```

Let us make a nicer plot with more annotation using ggplot, for PC1 vs PC2, PC1 vs PC3, and PC2 vs PC3. 

```{r}
library(ggplot2)
library(ggrepel)

# Make metadata object for the samples
colData <- data.frame(condition = factor(rep(c("control", "control", 'treatment'))))
rownames(colData) <- colnames(txi.kallisto$counts)

# Make the data.frame for ggplot 
y <- as.data.frame(pca$x)
y$Condition <- as.factor(colData$condition)

ggplot(y) +
  aes(PC1, PC2, col=Condition) +
  geom_point() +
  geom_text_repel(label=rownames(y)) +
  theme_bw()
```

Looking at the PC1 vs PC2 we can see how the treatment group is much higher up on the y axis in comparison to the controls, showing seperation visually. 


```{r}
ggplot(y) +
  aes(PC1, PC3, col=Condition) +
  geom_point() +
  geom_text_repel(label=rownames(y)) +
  theme_bw()
```

```{r}
ggplot(y) +
  aes(PC2, PC3, col=Condition) +
  geom_point() +
  geom_text_repel(label=rownames(y)) +
  theme_bw()
```


