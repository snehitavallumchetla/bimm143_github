---
title: "Alpha Fold Analysis"
author: "Snehita Vallumchetla (Al6853399)"
format: pdf
---

#Custom analysis of resulting models

Here we will analyze our AlphaFold structure prediction models. The input directory/folder comes form the ColabFolder server: 

```{r}
results_dir <- "HHIV_23119" 
```

```{r}
# create an object for all of the pdb files in this project space, and filter for them
pdb_files <- list.files(path = results_dir,
                        pattern = "*.pdb",
                        full.names = TRUE)

# print our PDB file names
basename(pdb_files)
```
Now we will install the Bio3D package to analyze our HHIV data!

```{r}
library(bio3d)

pdbs <- pdbaln(pdb_files, fit = T, exefile = "msa")
```

```{r}
#let us view what pdbs will output, looks pretty boring, so we will use RSMD to better visualize the data!
pdbs
```

Let use the `rmsd()` function which will allow us to calculate the RMSD values between all the pairs model!
```{r}
rd <- rmsd(pdbs, fit=T)

range(rd)
```

Let us now make a heatmap of the RMSD values:

```{r}
library(pheatmap)

colnames(rd) <- paste0("m",1:5)
rownames(rd) <- paste0("m",1:5)
pheatmap(rd)
```

Reading in a reference PDB structure
```{r}
pdb <- read.pdb("1hsg")
```

```{r}
plotb3(pdbs$b[1,], typ="l", lwd=2, sse=pdb)
points(pdbs$b[2,], typ="l", col="red")
points(pdbs$b[3,], typ="l", col="blue")
points(pdbs$b[4,], typ="l", col="darkgreen")
points(pdbs$b[5,], typ="l", col="orange")
abline(v=100, col="gray")
```

We can improve this model by finding the core/rigid core that is common between all of the models: 

```{r}
core <- core.find(pdbs)
```
```{r}
core.inds <- print(core, vol=0.5)
```
```{r}
xyz <- pdbfit(pdbs, core.inds, outpath="corefit_structures")
```

Let's examine the RMSF between positions of the structure, showing conformational variance in the structure. 
```{r}
rf <- rmsf(xyz)

plotb3(rf, sse=pdb)
abline(v=100, col="gray", ylab="RMSF")
```

#Predicted alignment for error domains:

Prediction alignment for model 1

```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=results_dir,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
```


```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```

```{r}
head(pae1$plddt)
```

Let's look at the maxPAE scores for pae1 and pae5:
```{r}
pae1$max_pae
pae5$max_pae
```

Plotting the N by N PAE scores using functions from the Bio3D packages:

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```


```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

#Residue conservation from alignment file: 

```{r}
aln_file <- list.files(path=results_dir,
                       pattern=".a3m$",
                        full.names = TRUE)
aln_file
```

```{r}
aln <- read.fasta(aln_file[1], to.upper = TRUE)
```

how many sequences are in the alignment:
```{r}
dim(aln$ali)
```

using the `residue()` function to score the residue conservation in the alignment
```{r}
sim <- conserv(aln)
```

```{r}
plotb3(sim[1:99], sse=trim.pdb(pdb, chain="A"),
       ylab="Conservation Score")
```

```{r}
con <- consensus(aln, cutoff = 0.9)
con$seq
```

```{r}
m1.pdb <- read.pdb(pdb_files[1])
occ <- vec2resno(c(sim[1:99], sim[1:99]), m1.pdb$atom$resno)
write.pdb(m1.pdb, o=occ, file="m1_conserv.pdb")
```

